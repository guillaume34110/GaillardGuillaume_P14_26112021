{"version":3,"sources":["data/states.js","data/department.js","pages/Form.js","data/columns.js","pages/List.js","App.js","reportWebVitals.js","index.js"],"names":["states","department","Form","stateDatas","setStateDatas","useState","dateValue","onChange","startDateValue","onStartChange","navigate","useNavigate","array","result","forEach","state","push","name","newArray","currentSelection","setCurrentSelection","deptSelect","setDeptSelect","fnRef","useRef","lnRef","streetRef","cityRef","zipRef","erFnRef","erLnRef","erStreetRef","erCityRef","erDateRef","erStartDateRef","erZipRef","dateRange","date","testedDate","Date","currentDate","olderDate","withoutTime","dateTime","d","getFullYear","getMonth","getDate","className","onClick","htmlFor","ref","type","id","size","value","t","e","preventDefault","dateRef","document","querySelectorAll","regexAlphabet","dateTest","startDateTest","regexToken","test","current","classList","remove","add","oldDatas","window","localStorage","getItem","JSON","parse","console","log","stateAbv","abbreviation","newDatas","firstName","lastName","birthDate","street","zip","city","startDate","length","setItem","stringify","columns","selector","row","sortable","reorder","List","pending","setPending","rows","setRows","searchRef","useEffect","direction","defaultSortFieldId","fixedHeaderScrollHeight","pagination","responsive","subHeaderAlign","subHeaderWrap","data","progressPending","rowsBuffer","rowToken","Object","values","val","toString","toLowerCase","includes","Switch","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2aa4a870.chunk.js","sourcesContent":["export const states = [\r\n    {\r\n        \"name\": \"Alabama\",\r\n        \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Alaska\",\r\n        \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"abbreviation\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Arizona\",\r\n        \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Arkansas\",\r\n        \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"California\",\r\n        \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Colorado\",\r\n        \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Connecticut\",\r\n        \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n        \"name\": \"Delaware\",\r\n        \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"District Of Columbia\",\r\n        \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n        \"name\": \"Federated States Of Micronesia\",\r\n        \"abbreviation\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Florida\",\r\n        \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Hawaii\",\r\n        \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Idaho\",\r\n        \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Illinois\",\r\n        \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Indiana\",\r\n        \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Iowa\",\r\n        \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n        \"name\": \"Kansas\",\r\n        \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Kentucky\",\r\n        \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Louisiana\",\r\n        \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Maine\",\r\n        \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"abbreviation\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Maryland\",\r\n        \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Massachusetts\",\r\n        \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Michigan\",\r\n        \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Minnesota\",\r\n        \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mississippi\",\r\n        \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Missouri\",\r\n        \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Montana\",\r\n        \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Nebraska\",\r\n        \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nevada\",\r\n        \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n        \"name\": \"New Hampshire\",\r\n        \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n        \"name\": \"New Jersey\",\r\n        \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n        \"name\": \"New Mexico\",\r\n        \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n        \"name\": \"New York\",\r\n        \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n        \"name\": \"North Carolina\",\r\n        \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"North Dakota\",\r\n        \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"abbreviation\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Ohio\",\r\n        \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n        \"name\": \"Oklahoma\",\r\n        \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n        \"name\": \"Oregon\",\r\n        \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Pennsylvania\",\r\n        \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"abbreviation\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Rhode Island\",\r\n        \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n        \"name\": \"South Carolina\",\r\n        \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"South Dakota\",\r\n        \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Tennessee\",\r\n        \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Texas\",\r\n        \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n        \"name\": \"Utah\",\r\n        \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n        \"name\": \"Vermont\",\r\n        \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands\",\r\n        \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Virginia\",\r\n        \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Washington\",\r\n        \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n        \"name\": \"West Virginia\",\r\n        \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n        \"name\": \"Wisconsin\",\r\n        \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n        \"name\": \"Wyoming\",\r\n        \"abbreviation\": \"WY\"\r\n    }\r\n];\r\nexport const newArray = () => {\r\n    const result = []\r\n    states.forEach(state =>{\r\n        result.push(state.name)\r\n    })\r\n    \r\n    return result\r\n}","export const department = [\"sales\",\"marqueting\",\"Engineering\",\"Human Resources\",\"Legal\"]","import React, {  useRef, useState } from 'react'\r\nimport DatePicker from 'react-date-picker';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport '../style/form.css'\r\nimport Dropdown from 'gg-dropdown-menu/dist/index.js'\r\nimport 'gg-dropdown-menu/dist-unmignified/dropdown.css'\r\nimport { newArray, states } from '../data/states';\r\nimport { department } from '../data/department';\r\n\r\nexport default function Form( {stateDatas,setStateDatas}) {\r\n    const [dateValue, onChange] = useState();\r\n    const [startDateValue, onStartChange] = useState();\r\n    const navigate = useNavigate();\r\n    const array = newArray()\r\n    const [currentSelection, setCurrentSelection] = useState(array[0])\r\n    const [deptSelect, setDeptSelect] = useState(department[0])\r\n    /*formRefs*/\r\n    const fnRef = useRef()\r\n    const lnRef = useRef()\r\n    const streetRef = useRef()\r\n    const cityRef = useRef()\r\n    const zipRef = useRef()\r\n\r\n\r\n    /*errorformRefs*/\r\n    const erFnRef = useRef()\r\n    const erLnRef = useRef()\r\n    const erStreetRef = useRef()\r\n    const erCityRef = useRef()\r\n    const erDateRef = useRef()\r\n    const erStartDateRef = useRef()\r\n    const erZipRef = useRef()\r\n\r\n\r\n    /* useEffect(() => {\r\n         \r\n     }, [currentSelection])*/\r\n    const redirect = () => {\r\n        navigate('/list')\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        const dateRef = document.querySelectorAll('.react-date-picker__wrapper')\r\n        let regexAlphabet = /^[a-zA-Z-\\s]{2,30}$/\r\n        let regexNumber = /^[0-9]{3,}$/\r\n        let regexStreet = /^[a-zA-Z0-9-\\s]{3,30}$/\r\n        let dateTest = dateRange(dateValue)\r\n        let startDateTest = dateRange(startDateValue)\r\n        let regexToken = 0\r\n        if (regexAlphabet.test(fnRef.current.value)) {\r\n            regexToken++\r\n            fnRef.current.classList.remove('input-error')\r\n            erFnRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            fnRef.current.classList.add('input-error')\r\n            erFnRef.current.classList.remove('hidden')\r\n        }\r\n        if (regexAlphabet.test(lnRef.current.value)) {\r\n            regexToken++\r\n            lnRef.current.classList.remove('input-error')\r\n            erLnRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            lnRef.current.classList.add('input-error')\r\n            erLnRef.current.classList.remove('hidden')\r\n        }\r\n        if (dateTest) {\r\n            regexToken++\r\n            dateRef[0].classList.remove('input-error')\r\n            erDateRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            dateRef[0].classList.add('input-error')\r\n            erDateRef.current.classList.remove('hidden')\r\n        }\r\n        if (startDateTest) {\r\n            regexToken++\r\n            dateRef[1].classList.remove('input-error')\r\n            erStartDateRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            dateRef[1].classList.add('input-error')\r\n            erStartDateRef.current.classList.remove('hidden')\r\n        }\r\n        if (regexStreet.test(streetRef.current.value)) {\r\n            regexToken++\r\n            streetRef.current.classList.remove('input-error')\r\n            erStreetRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            streetRef.current.classList.add('input-error')\r\n            erStreetRef.current.classList.remove('hidden')\r\n        }\r\n        if (regexAlphabet.test(cityRef.current.value)) {\r\n            regexToken++\r\n            cityRef.current.classList.remove('input-error')\r\n            erCityRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            cityRef.current.classList.add('input-error')\r\n            erCityRef.current.classList.remove('hidden')\r\n        }\r\n        if (regexNumber.test(zipRef.current.value)) {\r\n            regexToken++\r\n            zipRef.current.classList.remove('input-error')\r\n            erZipRef.current.classList.add('hidden')\r\n        }\r\n        else {\r\n            zipRef.current.classList.add('input-error')\r\n            erZipRef.current.classList.remove('hidden')\r\n        }\r\n\r\n        if (regexToken === 6) { //si toutes les entrées sont bonnes\r\n            let oldDatas = window.localStorage.getItem('users') //recuperation des data du stockage local\r\n            if (oldDatas) oldDatas = JSON.parse(oldDatas)\r\n            else oldDatas = []\r\n            console.log(oldDatas)\r\n            /*generate state abreviation*/\r\n            let stateAbv = \"error\"\r\n            states.forEach(state => {\r\n                if (state.name === currentSelection) stateAbv = state.abbreviation\r\n            })\r\n\r\n            const newDatas = {//creation des nouvelles data\r\n                firstName: fnRef.current.value,\r\n                lastName: lnRef.current.value,\r\n                birthDate: withoutTime(dateValue),\r\n                street: streetRef.current.value,\r\n                state: stateAbv,\r\n                zip: zipRef.current.value,\r\n                city: cityRef.current.value,\r\n                department: deptSelect,\r\n                startDate: withoutTime(startDateValue),\r\n                id: oldDatas.length\r\n            }\r\n\r\n            oldDatas.push(newDatas)\r\n            window.localStorage.setItem('users', JSON.stringify(oldDatas))\r\n            setStateDatas(newDatas)\r\n            /*remise a 0 */\r\n            fnRef.current.value = \"\"\r\n            lnRef.current.value = \"\"\r\n            streetRef.current.value = \"\"\r\n            cityRef.current.value = \"\"\r\n            setDeptSelect(department[0])\r\n            zipRef.current.value = \"\"\r\n            setCurrentSelection(array[0])\r\n            onChange(new Date())\r\n        }\r\n    }\r\n    const dateRange = (date) => { // fonction qui controle si la date est bien comprise dans un certain intervale\r\n        const testedDate = new Date(date);// la date a tester\r\n        const currentDate = new Date(); //la date d'aujourd'hui\r\n        const olderDate = new Date(1920 / 1 / 1)//la date la plus vielle\r\n        if (testedDate < currentDate && testedDate > olderDate) return true\r\n        else return false\r\n    }\r\n    const withoutTime = (dateTime) => { //clean date \r\n        var d = new Date(dateTime);\r\n        var date = d.getFullYear() + '/' + (d.getMonth() + 1) + '/' + d.getDate();\r\n        return date;\r\n    }\r\n    const setDate = () => {\r\n        onChange(new Date())\r\n        onStartChange(new Date()) \r\n    }\r\n    return (\r\n        <main className=\"form-main\">\r\n            <h1>HRnet</h1>\r\n            <div className=\"list-page\" onClick={redirect}>View Current Employees</div>\r\n            <form>\r\n                <h2>Create Employee</h2>\r\n                <label htmlFor=\"firstname\" >First Name:</label>\r\n                <input ref={fnRef} data-testid = \"fn-test\" type=\"text\" id=\"firstname\" name=\"firstname\" size=\"20\" />\r\n                <p ref={erFnRef} data-testid = \"fn-error\" className=\"hidden error\" >enter two letters or more</p>\r\n                <label htmlFor=\"lastname\">Last Name:</label>\r\n                <input data-testid = \"ln-test\" ref={lnRef} type=\"text\" id=\"lastname\" name=\"lastname\" size=\"20\" />\r\n                <p data-testid = \"ln-error\" ref={erLnRef} className=\"hidden error\" >enter two letters or more</p>\r\n                <p>Date of Birth</p>\r\n                <DatePicker  onChange={onChange} value={dateValue} />\r\n                <p data-testid = \"birth-error\" ref={erDateRef} className=\"hidden error\" >enter a valid birth date</p>\r\n                <p>Start Date</p>\r\n                <DatePicker onChange={onStartChange} value={startDateValue} />\r\n                <p data-testid = \"start-error\" ref={erStartDateRef} className=\"hidden error\" >enter a valid start date</p>\r\n                <div className=\"adress\">\r\n                    <h3>Address</h3>\r\n                    <label htmlFor=\"street\">Street:</label>\r\n                    <input ref={streetRef} data-testid = \"street-test\" type=\"text\" id=\"street\" name=\"street\" size=\"20\" />\r\n                    <p ref={erStreetRef} className=\"hidden error\" data-testid = \"street-error\" >enter two letters and number or more</p>\r\n                    <label htmlFor=\"city\">City:</label>\r\n                    <input data-testid = \"city-test\" ref={cityRef} type=\"text\" id=\"city\" name=\"city\" size=\"20\" />\r\n                    <p data-testid = \"city-error\" ref={erCityRef} className=\"hidden error\" >enter two letters or more</p>\r\n                    <p>State:</p>\r\n                    <Dropdown array={array} currentSelection={currentSelection} setCurrentSelection={setCurrentSelection} />\r\n                    <label htmlFor=\"zip\">Zip:</label>\r\n                    <inpu data-testid = \"zip-test\"t ref={zipRef} type=\"text\" id=\"zip\" name=\"zip\" size=\"20\" />\r\n                    <p data-testid = \"zip-error\" ref={erZipRef} className=\"hidden error\" >enter three number or more</p>\r\n                </div>\r\n                <p className=\"department department-label\" >department:</p>\r\n                <Dropdown array={department} currentSelection={deptSelect} setCurrentSelection={setDeptSelect} />\r\n                <button className=\"btn\" onClick={submit}>Save</button>\r\n                <div data-testid = \"test-click\" onClick = {setDate} className=\"test-click\">test click</div>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n","export const columns = [\r\n    { name : \"First Name\",selector : row => row.firstName,sortable: true,reorder: true},\r\n    { name : \"Last Name\",selector : row => row.lastName,sortable: true,reorder: true},\r\n    { name : \"Start Date\",selector : row => row.startDate,sortable: true,reorder: true},\r\n    { name : \"Department\",selector : row => row.department,sortable: true,reorder: true},\r\n    { name : \"Date of Birth\",selector : row => row.birthDate,sortable: true,reorder: true},\r\n    { name : \"Street\",selector : row => row.street,sortable: true,reorder: true},\r\n    { name : \"City\",selector : row => row.city,sortable: true,reorder: true},\r\n    { name : \"State\",selector : row => row.state,sortable: true,reorder: true},\r\n    { name : \"Zip Code\",selector : row => row.zip,sortable: true,reorder: true},\r\n]","import React, { useEffect, useRef, useState } from 'react'\r\nimport DataTable from 'react-data-table-component';\r\nimport { useNavigate } from 'react-router';\r\nimport { columns } from '../data/columns'\r\nimport '../style/list.css'\r\n\r\nexport default function List({stateDatas,setStateDatas}) {\r\n    const navigate = useNavigate();\r\n    const [pending, setPending] = useState(true);\r\n    const [rows, setRows] = useState(stateDatas)\r\n    const searchRef = useRef()\r\n\r\n    useEffect(() => {\r\n        let oldDatas = window.localStorage.getItem('users') //recuperation des data du stockage local\r\n        oldDatas = JSON.parse(oldDatas)\r\n        console.log(oldDatas)\r\n        if (!oldDatas) oldDatas = [{ firstName: \"\", lastName: \"\", birthDate: \"\", state: \"\", city: \"\", department: \"\", startDate: \"\", id: \"\", }]\r\n        setRows(oldDatas)\r\n        setPending(false)\r\n    }, []);\r\n\r\n    const redirect = () => {\r\n        navigate('/')\r\n    }\r\n    const search = () => {\r\n        let oldDatas = window.localStorage.getItem('users')\r\n        oldDatas = JSON.parse(oldDatas)\r\n        if (!oldDatas) oldDatas = [{ firstName: \"\", lastName: \"\", birthDate: \"\", state: \"\", city: \"\", department: \"\", startDate: \"\", id: \"\", }]\r\n        let rowsBuffer = []\r\n        oldDatas.forEach(row =>{\r\n            let rowToken = true\r\n            Object.values(row).forEach(val => {\r\n                console.log(val, 'val')\r\n                if (typeof val !== 'string') val = val.toString()\r\n                if (val.toLowerCase().includes(searchRef.current.value) && rowToken ) {\r\n                    rowToken = false\r\n                    rowsBuffer.push(row)\r\n                }\r\n            })\r\n        })\r\n        setRows(rowsBuffer)\r\n    }\r\n    const testFuction = () => {\r\n        setRows([{ firstName: \"jean\", lastName: \"michel\", birthDate: \"12/12/2020\", state: \"herault\", city: \"paris\", department: \"93\", startDate: \"12/12/2020\", id: \"0\", }])\r\n    }\r\n    return (\r\n        <main className=\"list-main\">\r\n            <h1>Current Employees</h1>\r\n            <div className=\"list-content\">\r\n                \r\n                <DataTable\r\n                    direction=\"auto\"\r\n                    defaultSortFieldId={1}\r\n                    fixedHeaderScrollHeight=\"300px\"\r\n                    pagination\r\n                    responsive\r\n                    subHeaderAlign=\"right\"\r\n                    subHeaderWrap\r\n                    columns={columns}\r\n                    data={rows}\r\n                    progressPending={pending} />\r\n       \r\n            <div className = \"research-contenair\">\r\n                <label htmlFor=\"research\">Search: </label>\r\n                <input id=\"research\" type=\"text\" ref={searchRef} onChange = {search}/>\r\n            </div>    \r\n             </div>\r\n            <p className=\"home-page\" onClick={redirect}>Home</p>\r\n            <div data-testid = \"test-click\" onClick = {testFuction} className=\"test-click\">test click</div>\r\n        </main>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport{\n  BrowserRouter,\nRoutes,\nRoute,\n} from \"react-router-dom\";\nimport Form from './pages/Form';\nimport List from './pages/List';\n\nexport const Switch = () => {\n  const [stateDatas , setStateDatas] = useState([]) //state data array for entire application\n  return (\n      <>\n      <Routes>\n      <Route path=\"/\" element={<Form stateDatas={stateDatas} setStateDatas ={setStateDatas} />} />\n      <Route path=\"/list\" element={<List  stateDatas={stateDatas} setStateDatas ={setStateDatas}  />} />\n     </Routes>\n      </>\n  )\n};\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n      <Switch />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}